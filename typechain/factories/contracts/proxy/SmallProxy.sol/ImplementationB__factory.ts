/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ImplementationB,
  ImplementationBInterface,
} from "../../../../contracts/proxy/SmallProxy.sol/ImplementationB";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101de806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633fa4f2451461003b5780635524107714610059575b600080fd5b610043610075565b60405161005091906100e2565b60405180910390f35b610073600480360381019061006e91906100a6565b61007b565b005b60005481565b60018161008891906100fd565b60008190555050565b6000813590506100a081610191565b92915050565b6000602082840312156100bc576100bb61018c565b5b60006100ca84828501610091565b91505092915050565b6100dc81610153565b82525050565b60006020820190506100f760008301846100d3565b92915050565b600061010882610153565b915061011383610153565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101485761014761015d565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61019a81610153565b81146101a557600080fd5b5056fea26469706673582212209ca93158ed428dedcb7bd7ec1e8a296de17bc3e1c295b81a029de29934fdec5f64736f6c63430008070033";

type ImplementationBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImplementationBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImplementationB__factory extends ContractFactory {
  constructor(...args: ImplementationBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ImplementationB> {
    return super.deploy(overrides || {}) as Promise<ImplementationB>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ImplementationB {
    return super.attach(address) as ImplementationB;
  }
  override connect(signer: Signer): ImplementationB__factory {
    return super.connect(signer) as ImplementationB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementationBInterface {
    return new utils.Interface(_abi) as ImplementationBInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImplementationB {
    return new Contract(address, _abi, signerOrProvider) as ImplementationB;
  }
}
